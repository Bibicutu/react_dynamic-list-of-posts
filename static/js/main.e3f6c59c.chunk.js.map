{"version":3,"sources":["components/PostsList.tsx","utils/fetchClient.ts","components/Loader/Loader.tsx","components/NewCommentForm.tsx","components/PostDetails.tsx","components/UserSelector.tsx","App.tsx","index.tsx"],"names":["PostsList","user","posts","isSidebar","setIsSidebar","selectedPost","setSelectedPost","handleSidebar","useCallback","post","id","className","map","title","type","onClick","BASE_URL","wait","delay","Promise","resolve","setTimeout","request","url","method","data","options","body","JSON","stringify","headers","then","fetch","response","json","client","Loader","NewCommentForm","handleAddComment","useState","authorName","setAuthorName","authorNameError","setAuthorNameError","authorEmail","setAuthorEmail","authorEmailError","setAuthorEmailError","commentText","setCommentText","commentTextError","setCommentTextError","isLoading","setIsLoading","authorNameHandler","event","target","value","authorEmailHandler","commentTextHandler","addCommentHandler","preventDefault","length","clearForm","onSubmit","htmlFor","name","placeholder","cn","onChange","PostDetails","getUser","comments","setComments","commentsAreLoading","setCommentsAreLoading","loadCommentsError","setLoadCommentsError","showNewMessage","setShowNewMessage","getComments","postId","a","receivedComments","filter","comment","email","newComment","reduce","acc","curr","receivedComment","previousComments","handleDelete","commentId","useEffect","href","UserSelector","users","activeUser","setActiveUser","getPostList","isDropdownDisplayed","setIsDropdownDisplayed","handleActiveUser","handleDropdownDisplay","role","App","setUsers","loadUsersError","setLoadUsersError","loadPostsError","setLoadPostsError","postList","setPostList","getUsersFromApi","receivedUsers","getPostListFromApi","receivedPostList","userId","foundUser","find","undefined","classNames","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e3f6c59c.chunk.js","sourcesContent":["import React, { useCallback } from 'react';\nimport { Post } from '../types/Post';\nimport { User } from '../types/User';\n\ntype Props = {\n  user: User | null,\n  posts: Post[],\n  isSidebar: boolean,\n  setIsSidebar: (value: boolean) => void,\n  selectedPost: Post | null,\n  setSelectedPost: (post: Post | null) => void,\n};\n\nexport const PostsList: React.FC<Props> = (\n  {\n    user,\n    posts,\n    isSidebar,\n    setIsSidebar,\n    selectedPost,\n    setSelectedPost,\n  },\n) => {\n  const handleSidebar = useCallback((post) => {\n    if (selectedPost && post.id === selectedPost.id) {\n      setSelectedPost(null);\n      setIsSidebar(false);\n\n      return;\n    }\n\n    setSelectedPost(post);\n    setIsSidebar(true);\n  }, [isSidebar, selectedPost]);\n\n  return (\n    <>\n      {user && (\n        <div data-cy=\"PostsList\">\n          <p className=\"title\">Posts:</p>\n\n          <table\n            className=\"table is-fullwidth is-striped is-hoverable is-narrow\"\n          >\n            <thead>\n              <tr className=\"has-background-link-light\">\n                <th>#</th>\n                <th>Title</th>\n                <th> </th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {posts.map(post => {\n                return (\n                  <tr\n                    key={post.id}\n                    data-cy=\"Post\"\n                  >\n                    <td data-cy=\"PostId\">{post.id}</td>\n\n                    <td data-cy=\"PostTitle\">\n                      {post.title}\n                    </td>\n\n                    <td className=\"has-text-right is-vcentered\">\n                      <button\n                        type=\"button\"\n                        data-cy=\"PostButton\"\n                        className=\"button is-link is-light\"\n                        onClick={() => {\n                          handleSidebar(post);\n                        }}\n                      >\n                        {(selectedPost && selectedPost.id === post.id)\n                          ? 'Close'\n                          : 'Open' }\n                      </button>\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n      )}\n    </>\n  );\n};\n","const BASE_URL = 'https://mate.academy/students-api/';\n// const BASE_URL = 'https://jsonplaceholder.typicode.com/';\n// const BASE_URL = 'http://localhost:3000/api/test/';\n\n// a promise resolved after a given delay\nfunction wait(delay: number) {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\n// To have autocompletion and avoid mistypes\ntype RequestMethod = 'GET' | 'POST' | 'PATCH' | 'DELETE';\n\nfunction request<T>(\n  url: string,\n  method: RequestMethod = 'GET',\n  data: any = null, // we can send any data to the server\n): Promise<T> {\n  const options: RequestInit = { method };\n\n  if (data) {\n    // We add body and Content-Type only for the requests with data\n    options.body = JSON.stringify(data);\n    options.headers = {\n      'Content-Type': 'application/json; charset=UTF-8',\n    };\n  }\n\n  // for a demo purpose we emulate a delay to see if Loaders work\n  return wait(300)\n    .then(() => fetch(BASE_URL + url, options))\n    .then(response => response.json());\n}\n\nexport const client = {\n  get: <T>(url: string) => request<T>(url),\n  post: <T>(url: string, data: any) => request<T>(url, 'POST', data),\n  patch: <T>(url: string, data: any) => request<T>(url, 'PATCH', data),\n  delete: (url: string) => request(url, 'DELETE'),\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { FormEvent, useCallback, useState } from 'react';\nimport cn from 'classnames';\n\ntype Props = {\n  handleAddComment: (\n    name: string,\n    email: string,\n    comment: string,\n  ) => void\n};\n\nexport const NewCommentForm: React.FC<Props> = ({ handleAddComment }) => {\n  const [authorName, setAuthorName] = useState('');\n  const [authorNameError, setAuthorNameError] = useState(false);\n  const [authorEmail, setAuthorEmail] = useState('');\n  const [authorEmailError, setAuthorEmailError] = useState(false);\n  const [commentText, setCommentText] = useState('');\n  const [commentTextError, setCommentTextError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const authorNameHandler = useCallback((event) => {\n    setAuthorName(event.target.value);\n    setAuthorNameError(false);\n  }, [authorName]);\n\n  const authorEmailHandler = useCallback((event) => {\n    setAuthorEmail(event.target.value);\n    setAuthorEmailError(false);\n  }, [authorEmail]);\n\n  const commentTextHandler = useCallback((event) => {\n    setCommentText(event.target.value);\n    setCommentTextError(false);\n  }, [commentText]);\n\n  const addCommentHandler = useCallback((event: FormEvent) => {\n    event.preventDefault();\n\n    setAuthorNameError(authorName.length === 0);\n    setAuthorEmailError(authorEmail.length === 0);\n    setCommentTextError(commentText.length === 0);\n\n    if (authorName.length === 0\n        || authorEmail.length === 0\n        || commentText.length === 0) {\n      return;\n    }\n\n    setIsLoading(true);\n    handleAddComment(authorName, authorEmail, commentText);\n    setIsLoading(false);\n\n    setCommentText('');\n  }, [authorName, authorEmail, commentText]);\n\n  const clearForm = useCallback(() => {\n    setAuthorName('');\n    setAuthorEmail('');\n    setCommentText('');\n\n    setAuthorNameError(false);\n    setAuthorEmailError(false);\n    setCommentTextError(false);\n  }, []);\n\n  return (\n    <form\n      data-cy=\"NewCommentForm\"\n      onSubmit={addCommentHandler}\n    >\n      <div className=\"field\" data-cy=\"NameField\">\n        <label className=\"label\" htmlFor=\"comment-author-name\">\n          Author Name\n        </label>\n\n        <div className=\"control has-icons-left has-icons-right\">\n          <input\n            type=\"text\"\n            name=\"name\"\n            id=\"comment-author-name\"\n            placeholder=\"Name Surname\"\n            className={cn(\n              'input',\n              { 'is-danger': authorNameError },\n            )}\n            value={authorName}\n            onChange={(event) => authorNameHandler(event)}\n          />\n\n          <span className=\"icon is-small is-left\">\n            <i className=\"fas fa-user\" />\n          </span>\n\n          {authorNameError && (\n            <span\n              className=\"icon is-small is-right has-text-danger\"\n              data-cy=\"ErrorIcon\"\n            >\n              <i className=\"fas fa-exclamation-triangle\" />\n            </span>\n          )}\n        </div>\n\n        {authorNameError && (\n          <p className=\"help is-danger\" data-cy=\"ErrorMessage\">\n            Name is required\n          </p>\n        )}\n      </div>\n\n      <div className=\"field\" data-cy=\"EmailField\">\n        <label className=\"label\" htmlFor=\"comment-author-email\">\n          Author Email\n        </label>\n\n        <div className=\"control has-icons-left has-icons-right\">\n          <input\n            type=\"text\"\n            name=\"email\"\n            id=\"comment-author-email\"\n            placeholder=\"email@test.com\"\n            className={cn(\n              'input',\n              { 'is-danger': authorEmailError },\n            )}\n            value={authorEmail}\n            onChange={(event) => authorEmailHandler(event)}\n          />\n\n          <span className=\"icon is-small is-left\">\n            <i className=\"fas fa-envelope\" />\n          </span>\n\n          {authorEmailError && (\n            <span\n              className=\"icon is-small is-right has-text-danger\"\n              data-cy=\"ErrorIcon\"\n            >\n              <i className=\"fas fa-exclamation-triangle\" />\n            </span>\n          )}\n        </div>\n\n        {authorEmailError && (\n          <p className=\"help is-danger\" data-cy=\"ErrorMessage\">\n            Email is required\n          </p>\n        )}\n      </div>\n\n      <div className=\"field\" data-cy=\"BodyField\">\n        <label className=\"label\" htmlFor=\"comment-body\">\n          Comment Text\n        </label>\n\n        <div className=\"control\">\n          <textarea\n            id=\"comment-body\"\n            name=\"body\"\n            placeholder=\"Type comment here\"\n            className={cn(\n              'textarea',\n              { 'is-danger': commentTextError },\n            )}\n            value={commentText}\n            onChange={(event) => commentTextHandler(event)}\n          />\n        </div>\n\n        {commentTextError && (\n          <p className=\"help is-danger\" data-cy=\"ErrorMessage\">\n            Enter some text\n          </p>\n        )}\n      </div>\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            // className=\"button is-link is-loading\"\n            className={cn(\n              'button',\n              'is-link',\n              { 'is-loading': isLoading },\n            )}\n          >\n            Add\n          </button>\n        </div>\n\n        <div className=\"control\">\n          {/* eslint-disable-next-line react/button-has-type */}\n          <button\n            type=\"reset\"\n            className=\"button is-link is-light\"\n            onClick={clearForm}\n          >\n            Clear\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { Post } from '../types/Post';\nimport { client } from '../utils/fetchClient';\nimport { Loader } from './Loader';\nimport { Comment } from '../types/Comment';\nimport { NewCommentForm } from './NewCommentForm';\n\ntype Props = {\n  post: Post | null,\n  getUser: (email: string) => string,\n};\n\nexport const PostDetails: React.FC<Props> = ({ post, getUser }) => {\n  const [comments, setComments] = useState<Comment[]>([]);\n  const [commentsAreLoading, setCommentsAreLoading] = useState<boolean>(false);\n  const [loadCommentsError, setLoadCommentsError] = useState<boolean>(false);\n  const [showNewMessage, setShowNewMessage] = useState<boolean>(false);\n\n  const getComments = useCallback(async (postId: number) => {\n    try {\n      // setComments([]);\n      setShowNewMessage(false);\n      setCommentsAreLoading(true);\n      const receivedComments = await client.get<Comment[]>('comments');\n\n      setComments(receivedComments.filter(\n        comment => comment.postId === postId,\n      ));\n      setCommentsAreLoading(false);\n    } catch {\n      setLoadCommentsError(true);\n    }\n  }, [comments]);\n\n  const handleAddComment = useCallback(async (\n    name,\n    email,\n    comment,\n  ) => {\n    const newComment: Comment = {\n      postId: (post && post.id) || 1,\n      id: comments.reduce((acc, curr) => {\n        return (acc > curr.id ? acc : curr.id);\n      }, 0) + 1,\n      name,\n      email,\n      body: comment,\n    };\n    const receivedComment = await client.post<Comment>(\n      'comments', newComment,\n    );\n\n    setComments((previousComments) => [\n      ...previousComments,\n      receivedComment,\n    ]);\n  }, [comments]);\n\n  const handleDelete = useCallback(async (commentId: number) => {\n    setComments((previousComments) => previousComments.filter(\n      comment => comment.id !== commentId,\n    ));\n\n    await client.delete(`comments/${commentId}`);\n  }, [comments]);\n\n  useEffect(() => {\n    if (post) {\n      getComments(post.id);\n    }\n  }, [post]);\n\n  return (\n    <div className=\"content\" data-cy=\"PostDetails\">\n      <div className=\"content\" data-cy=\"PostDetails\">\n        <div className=\"block\">\n          <h2 data-cy=\"PostTitle\">\n            {post && `#${post.id}: ${post.title}`}\n          </h2>\n\n          <p data-cy=\"PostBody\">\n            {post && post.body}\n          </p>\n        </div>\n\n        <div className=\"block\">\n          { commentsAreLoading && <Loader /> }\n\n          {loadCommentsError && (\n            <div className=\"notification is-danger\" data-cy=\"CommentsError\">\n              Something went wrong\n            </div>\n          )}\n\n          {!comments.length && (\n            <p className=\"title is-4\" data-cy=\"NoCommentsMessage\">\n              No comments yet\n            </p>\n          )}\n\n          {(comments.length === 0) && (\n            <p className=\"title is-4\">Comments:</p>\n          )}\n\n          {(comments.length !== 0) && (\n            comments.map(comment => (\n              <article\n                key={comment.id}\n                className=\"message is-small\"\n                data-cy=\"Comment\"\n              >\n                <div className=\"message-header\">\n                  <a\n                    href={`mailto:${comment.email}`}\n                    data-cy=\"CommentAuthor\"\n                  >\n                    {getUser(comment.email)}\n                  </a>\n                  <button\n                    data-cy=\"CommentDelete\"\n                    type=\"button\"\n                    className=\"delete is-small\"\n                    aria-label=\"delete\"\n                    onClick={() => (handleDelete(comment.id))}\n                  >\n                    delete button\n                  </button>\n                </div>\n\n                <div className=\"message-body\" data-cy=\"CommentBody\">\n                  {comment.body}\n                </div>\n              </article>\n            ))\n          )}\n\n          <button\n            data-cy=\"WriteCommentButton\"\n            type=\"button\"\n            className=\"button is-link\"\n            onClick={() => setShowNewMessage(showNewMessage || !showNewMessage)}\n          >\n            Write a comment\n          </button>\n\n          {/* <article className=\"message is-small\" data-cy=\"Comment\">\n            <div className=\"message-header\">\n              <a href=\"mailto:misha@mate.academy\" data-cy=\"CommentAuthor\">\n                Misha Hrynko\n              </a>\n              <button\n                data-cy=\"CommentDelete\"\n                type=\"button\"\n                className=\"delete is-small\"\n                aria-label=\"delete\"\n              >\n                delete button\n              </button>\n            </div>\n\n            <div className=\"message-body\" data-cy=\"CommentBody\">\n              Some comment\n            </div>\n          </article> */}\n\n          {/* <article className=\"message is-small\" data-cy=\"Comment\">\n            <div className=\"message-header\">\n              <a\n                href=\"mailto:misha@mate.academy\"\n                data-cy=\"CommentAuthor\"\n              >\n                Misha Hrynko\n              </a>\n\n              <button\n                data-cy=\"CommentDelete\"\n                type=\"button\"\n                className=\"delete is-small\"\n                aria-label=\"delete\"\n              >\n                delete button\n              </button>\n            </div>\n            <div\n              className=\"message-body\"\n              data-cy=\"CommentBody\"\n            >\n              One more comment\n            </div>\n          </article> */}\n\n          {/* <article className=\"message is-small\" data-cy=\"Comment\">\n            <div className=\"message-header\">\n              <a\n                href=\"mailto:misha@mate.academy\"\n                data-cy=\"CommentAuthor\"\n              >\n                Misha Hrynko\n              </a>\n\n              <button\n                data-cy=\"CommentDelete\"\n                type=\"button\"\n                className=\"delete is-small\"\n                aria-label=\"delete\"\n              >\n                delete button\n              </button>\n            </div>\n\n            <div className=\"message-body\" data-cy=\"CommentBody\">\n              {'Multi\\nline\\ncomment'}\n            </div>\n          </article> */}\n\n          {/* <button\n            data-cy=\"WriteCommentButton\"\n            type=\"button\"\n            className=\"button is-link\"\n          >\n            Write a comment\n          </button> */}\n        </div>\n\n        {showNewMessage && (\n          <NewCommentForm\n            handleAddComment={handleAddComment}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n","import React, {\n  useCallback,\n  useState,\n} from 'react';\nimport cn from 'classnames';\nimport { User } from '../types/User';\n\ntype Props = {\n  users: User[],\n  activeUser: User | null,\n  setActiveUser: (user: User) => void,\n  getPostList: (user: User) => void,\n  setIsSidebar: (isSidebar: boolean) => void,\n};\n\nexport const UserSelector: React.FC<Props> = (\n  {\n    users,\n    activeUser,\n    setActiveUser,\n    getPostList,\n    setIsSidebar,\n  },\n) => {\n  const [isDropdownDisplayed, setIsDropdownDisplayed] = useState<boolean>(\n    false,\n  );\n\n  // const handleActiveUser = (\n  //   event: React.MouseEvent,\n  //   user: User,\n  // ) => {\n  //   event.preventDefault();\n  //   setActiveUser(user);\n  //   console.log('User clicked: ', user);\n  // };\n  const handleActiveUser = useCallback(\n    (event: React.MouseEvent, user: User) => {\n      event.preventDefault();\n      setActiveUser(user);\n      setIsDropdownDisplayed(!isDropdownDisplayed);\n      getPostList(user);\n      setIsSidebar(false);\n    }, [activeUser, isDropdownDisplayed],\n  );\n\n  const handleDropdownDisplay = useCallback(() => {\n    setIsDropdownDisplayed(!isDropdownDisplayed);\n  }, [isDropdownDisplayed]);\n\n  return (\n    <div\n      data-cy=\"UserSelector\"\n      className=\"dropdown is-active\"\n    >\n      <div className=\"dropdown-trigger\">\n        <button\n          type=\"button\"\n          className=\"button\"\n          aria-haspopup=\"true\"\n          aria-controls=\"dropdown-menu\"\n          onClick={handleDropdownDisplay}\n        >\n          <span>\n            {(activeUser && activeUser.name) || 'Choose a user'}\n          </span>\n\n          <span className=\"icon is-small\">\n            <i className=\"fas fa-angle-down\" aria-hidden=\"true\" />\n          </span>\n        </button>\n      </div>\n\n      {isDropdownDisplayed && (\n        <div className=\"dropdown-menu\" id=\"dropdown-menu\" role=\"menu\">\n          <div className=\"dropdown-content\">\n            {users.map(user => {\n              return (\n                <a\n                  key={user.id}\n                  href={`#user-${user.id}`}\n                  className={cn(\n                    'dropdown-item',\n                    { 'is-active': activeUser && user.id === activeUser.id },\n                  )}\n                  onClick={(event) => {\n                    handleActiveUser(event, user);\n                  }}\n                >\n                  {user.name}\n                </a>\n              );\n            })}\n            {/* <a href=\"#user-1\" className=\"dropdown-item\">Leanne Graham</a>\n            <a href=\"#user-2\" className=\"dropdown-item is-active\">Ervin Howell</a>\n            <a href=\"#user-3\" className=\"dropdown-item\">Clementine Bauch</a>\n            <a href=\"#user-4\" className=\"dropdown-item\">Patricia Lebsack</a>\n            <a href=\"#user-5\" className=\"dropdown-item\">Chelsey Dietrich</a> */}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useCallback, useEffect, useState } from 'react';\nimport 'bulma/bulma.sass';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nimport classNames from 'classnames';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { UserSelector } from './components/UserSelector';\nimport { client } from './utils/fetchClient';\nimport { User } from './types/User';\nimport { Loader } from './components/Loader';\nimport { Post } from './types/Post';\n\nexport const App: React.FC = () => {\n  const [users, setUsers] = useState<User[]>([]);\n  const [activeUser, setActiveUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const [loadUsersError, setLoadUsersError] = useState<boolean>(false);\n  const [loadPostsError, setLoadPostsError] = useState<boolean>(false);\n  const [postList, setPostList] = useState<Post[]>([]);\n  const [isSidebar, setIsSidebar] = useState<boolean>(false);\n  const [selectedPost, setSelectedPost] = useState<Post | null>(null);\n\n  const getUsersFromApi = useCallback(async () => {\n    try {\n      const receivedUsers = await client.get<User[]>('users');\n\n      setUsers(receivedUsers);\n      setIsLoading(false);\n    } catch {\n      setLoadUsersError(true);\n    }\n  }, [users]);\n\n  const getPostListFromApi = useCallback(async (user: User) => {\n    try {\n      setIsLoading(true);\n      const receivedPostList = await client.get<Post[]>('posts');\n\n      setPostList(receivedPostList.filter(post => post.userId === user.id));\n      setIsLoading(false);\n    } catch {\n      setLoadPostsError(true);\n    }\n  }, [postList]);\n\n  const getUser = useCallback((email: string) => {\n    const foundUser = (users.find(user => user.email === email));\n\n    if (foundUser === undefined) {\n      return '';\n    }\n\n    return foundUser.name;\n  }, [selectedPost]);\n\n  useEffect(() => {\n    getUsersFromApi();\n  }, []);\n\n  return (\n    <main className=\"section\">\n      <div className=\"container\">\n        <div className=\"tile is-ancestor\">\n          <div className=\"tile is-parent\">\n            <div className=\"tile is-child box is-success\">\n              <div className=\"block\">\n                <UserSelector\n                  users={users}\n                  activeUser={activeUser}\n                  setActiveUser={setActiveUser}\n                  getPostList={getPostListFromApi}\n                  setIsSidebar={setIsSidebar}\n                />\n              </div>\n\n              <div className=\"block\" data-cy=\"MainContent\">\n                <p data-cy=\"NoSelectedUser\">\n                  {!activeUser && 'No user selected'}\n                </p>\n\n                {isLoading && !loadUsersError && !loadPostsError && <Loader />}\n\n                {(loadUsersError || loadPostsError) && (\n                  <div\n                    className=\"notification is-danger\"\n                    data-cy=\"PostsLoadingError\"\n                  >\n                    Something went wrong!\n                  </div>\n                )}\n\n                {activeUser && postList.length === 0 && (\n                  <div className=\"notification is-warning\" data-cy=\"NoPostsYet\">\n                    No posts yet\n                  </div>\n                )}\n\n                <PostsList\n                  user={activeUser}\n                  posts={postList}\n                  isSidebar={isSidebar}\n                  setIsSidebar={setIsSidebar}\n                  selectedPost={selectedPost}\n                  setSelectedPost={setSelectedPost}\n                />\n              </div>\n            </div>\n          </div>\n\n          <div\n            data-cy=\"Sidebar\"\n            className={classNames(\n              'tile',\n              'is-parent',\n              'is-8-desktop',\n              'Sidebar',\n              {\n                'Sidebar--open': isSidebar,\n              },\n            )}\n          >\n            <div className=\"tile is-child box is-success \">\n              <PostDetails\n                post={selectedPost}\n                getUser={getUser}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}